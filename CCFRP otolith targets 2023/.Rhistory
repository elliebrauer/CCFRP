trips <- trips %>% rename_all(make.names)
catches <- catches %>% rename_all(make.names)
drifts_all <- drifts_all %>% rename_all(make.names)
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
filter(Rockfish == TRUE)
# select final columns from trip table
trips <- trips %>%
dplyr::select(Trip.ID, Month, Day, Year.Automatic, Vessel) %>%
rename(YEAR = Year.Automatic)
# join drifts and trip info
drifts_all <- left_join(drifts_all, trips)
# Pull only relevent column names from the drifts
drifts <- drifts_all %>%
dplyr::select(
Drift.ID, Trip.ID, ID.Cell.per.Trip, Grid.Cell.ID,
Site..MPA..REF., Drift.Time..hrs., Total...Anglers.Fishing,
Start.Depth..ft., End.Depth..ft., Excluded.Drift.Comment,
ST_LatDD, ST_LonDD, Month, Day, YEAR, Vessel
) %>%
rename(SITE = Site..MPA..REF.) %>%
filter(!is.na(Drift.Time..hrs.))
# Need to change 7's to july and 8's to august
drifts$Month[drifts$Month == 7] <- "July"
drifts$Month[drifts$Month == 8] <- "August"
# Collapse catches to drift level
#Target_catches <- subset(catches, Species.Code == ccfrp.species.code)
Drift_catches <- catches %>%
group_by(Common.Name, Drift.ID) %>%
tally()
#colnames(Target_catches)[2] <- "Target"
# join drifts and catch info and make NA 0 where target species not observed
dat <- left_join(Drift_catches, drifts)
dat <- dat %>%
mutate(Area.code = substring(Drift.ID, 1, 2)) %>%
mutate(Effort = Total...Anglers.Fishing * Drift.Time..hrs.) %>%
mutate(CPUE = n / Effort)
dat <- left_join(dat, Areas)
# List of AREAs to drop
# TD, Trinidad - no mpa
# FN, farallons, samples only 2 years
# PC - error?
dat <- dat %>%
filter(!(Area.code %in% c("FN", "PC", "BM", "LB", "TD"))) %>%
droplevels
# Fish time filter
# Give drifts within a cell on the same day a drift number
# See how many drifts and total fished time
Num_drifts_fished <- dat %>%
select(YEAR, Drift.ID, ID.Cell.per.Trip, Drift.Time..hrs.) %>%
unique() %>%
group_by(YEAR, ID.Cell.per.Trip) %>%
summarise(
num.drifts = n(),
tot_time = sum(Drift.Time..hrs.)
)
# cells fished at least 15 minutes
Drift_time_keep <- Num_drifts_fished %>% filter(tot_time >= .25)
# Remove cells fished less tan a total of 15 minutes on a day
dat <- dat %>%
filter(
ID.Cell.per.Trip %in% Drift_time_keep$ID.Cell.per.Trip,
`Drift.Time..hrs.` > 0.03333333
)
#-------------------------------------------------------------------------------
# Figure out how many of each species we can collect during the 2023 season
#Subset to just Reference areas since we can't take otoliths from MPAs
#and only look at 2019-2022
dat2 <- dat %>%
filter(SITE == 'REF',
YEAR %in% c(2019, 2021, 2022))
#Get the total angler hours by monitoring area
effort_by_program <- dat2 %>%
ungroup() %>%
select(Drift.ID, YEAR, Effort, Total...Anglers.Fishing, Monitoring.Group, Name) %>%
unique()
total_effort <- effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(tot_effort = sum(Effort)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = tot_effort)
#Look at the effort by year among the programs
knitr::kable(booktabs = T,
caption = "Total angler hours by institution summed across 2019, 2021, 2022.",
effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = Total_AnglerHours)
) %>%
kable_styling(latex_options = "striped")
knitr::kable(booktabs = T,
caption = "Total effort in 2022",
effort_by_program %>%
filter(YEAR == 2022) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort), 0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
) %>%
kable_styling(latex_options = "striped")
knitr::kable(booktabs = T,
caption = "Total effort in 2019",
effort_by_program %>%
filter(YEAR == 2019) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>% data.frame
)
## Get it down to the species there would be enough or or we're interested in
total.fish <- dat2 %>%
group_by(Common.Name) %>%
summarise(total = sum(n)) #%>%
# filter(total > )
dat2 <- dat2 %>%
filter(Common.Name %in% total.fish$Common.Name) %>%
filter(!(Common.Name %in% c("Yelloweye Rockfish",
"Olive or Yellowtail Rockfish")))
fish_numbers <- dat2 %>%
group_by(Common.Name, Monitoring.Group, YEAR, Region) %>%
summarise(total_fish = sum(n),
avg_annual_cpue = mean(CPUE))# %>%
# group_by(Common.Name, CA_area) %>%
# summarise(avg_fish = mean(total_fish),
#           avg_cpue = mean(avg_annual_cpue)) %>%
# mutate(avg_fish = round(avg_fish,0))
#
####SOUTH
# Get the average number of fish by program per year
south0 <- fish_numbers %>%
filter(Region == "South") %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 50 - goal or less
#number of otoliths per species
south_collections <- south0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
south_collections <- left_join(south_collections, south0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total))))) #%>%
#Check totals for each program to see how they fall out in terms of effort for collecting
south_program_effort <- south_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
#####NORTH
# Get the average number of fish collected over the last three years by program
north0 <- fish_numbers %>%
filter(Region %in% c("Central", "North")) %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 60 - goal
#number of otoliths per species
north_collections <- north0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
north_collections <- left_join(north_collections, north0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total)))))
#Check totals for each program to see how they fall out in terms of effort for collecting
north_program_effort <- north_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
program_effort = rbind(south_program_effort, north_program_effort)
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO)))
kableExtra::kbl(collections_final,
booktabs = TRUE,
caption = "Suggested otolith collections for 2023 CCFRP by species and CCFRP partner",
row.names = F) %>%
kableExtra::kable_styling(latex_options = "striped")
kableExtra::kbl(program_effort,
booktabs = TRUE,
caption = "Number of structures to collect by partner for 2023 CCFRP",
row.names = F
)
kableExtra::kbl(fish_numbers,
longtable = TRUE,
booktabs = TRUE,
caption = "Longer table with raw data",
row.names = F
) %>%
kable_styling(latex_options=c("repeat_header", "striped", "hold_position"))
poly = read.csv("poly_ref.csv")
head(poly)
polyblue = filter(poly, species == "BLU")
polyblue$year = as.character(polyblue$year)
polyblue$retained = as.character(polyblue$retained)
meangroup = polyblue %>% group_by(year, retained) %>%
summarise(avg = mean(length_mm))
ggplot(polyblue, aes(x=length_mm, fill=retained)) + geom_density(alpha=.2)+
facet_grid(year ~ .) +
geom_vline(data=meangroup, aes(xintercept=avg, colour=retained), linetype="dashed", size=.3) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tab = polyblue %>% group_by(year, retained) %>%
summarise(n = n()) %>% pivot_wider(names_from = retained, values_from = n)
kable(tab, table.attr = "style = \"color: white;\"")
tab = polyblue %>% group_by(year, retained) %>%
summarise(n = n()) %>% pivot_wider(names_from = retained, values_from = n)
kable(tab)
kableExtra::kbl(tab,
longtable = TRUE,
booktabs = TRUE,
caption = "Poly blue",
row.names = F
) %>%
kable_styling(latex_options=c("repeat_header", "striped", "hold_position"))
tab = polyblue %>% group_by(year, retained) %>%
summarise(n = n()) %>% pivot_wider(names_from = retained, values_from = n)
kableExtra::kbl(tab,
longtable = TRUE,
booktabs = TRUE,
caption = "Poly blue",
row.names = F
) %>%
kable_styling(latex_options=c("repeat_header", "striped", "hold_position"))
poly = read.csv("poly_ref.csv")
head(poly)
polyblue = filter(poly, species == "BLU")
polyblue$year = as.character(polyblue$year)
polyblue$retained = as.character(polyblue$retained)
meangroup = polyblue %>% group_by(year, retained) %>%
summarise(avg = mean(length_mm))
ggplot(polyblue, aes(x=length_mm, fill=retained)) + geom_density(alpha=.2)+
facet_grid(year ~ .) +
geom_vline(data=meangroup, aes(xintercept=avg, colour=retained), linetype="dashed", size=.3) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
knitr::opts_chunk$set(echo = FALSE)
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
#load("CCFRP_cleanedup.RData")
#setwd("C:/GitHub/CCFRP")
# Read in data and basic cleanup
# Eventually open these directly in access, but it's not behaving
# Extract excel files from the Access database
# read in trip data
trips <- read.csv("1-Trip Information.csv")
# read in drift data
drifts_all <-read.csv("3-Drift Information.csv")
# read in catch data
catches <- read.csv("4-Caught Fishes.csv")
#Species lookup
Species <- read.csv("Fish Species.csv")
Species <- Species %>%
select(Species.Code, Common.Name, Rockfish)
knitr::opts_chunk$set(echo = FALSE)
library(devtools)
library(dplyr)
library(ggplot2)
library(ggridges)
library(stringr)
library(tidyr)
library(unikn)
library(viridis)
library(kableExtra)
library(knitr)
library(xtable)
knitr::opts_chunk$set(echo = FALSE)
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
#load("CCFRP_cleanedup.RData")
#setwd("C:/GitHub/CCFRP")
# Read in data and basic cleanup
# Eventually open these directly in access, but it's not behaving
# Extract excel files from the Access database
# read in trip data
trips <- read.csv("1-Trip Information.csv")
# read in drift data
drifts_all <-read.csv("3-Drift Information.csv")
# read in catch data
catches <- read.csv("4-Caught Fishes.csv")
#Species lookup
Species <- read.csv("Fish Species.csv")
Species <- Species %>%
select(Species.Code, Common.Name, Rockfish)
#Read in management groups
Areas <- read.csv("Monitoring Areas.csv")
# columns have spaces - remove all spaces here
trips <- trips %>% rename_all(make.names)
catches <- catches %>% rename_all(make.names)
drifts_all <- drifts_all %>% rename_all(make.names)
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
filter(Rockfish == TRUE)
# select final columns from trip table
trips <- trips %>%
dplyr::select(Trip.ID, Month, Day, Year.Automatic, Vessel) %>%
rename(YEAR = Year.Automatic)
# join drifts and trip info
drifts_all <- left_join(drifts_all, trips)
# Pull only relevent column names from the drifts
drifts <- drifts_all %>%
dplyr::select(
Drift.ID, Trip.ID, ID.Cell.per.Trip, Grid.Cell.ID,
Site..MPA..REF., Drift.Time..hrs., Total...Anglers.Fishing,
Start.Depth..ft., End.Depth..ft., Excluded.Drift.Comment,
ST_LatDD, ST_LonDD, Month, Day, YEAR, Vessel
) %>%
rename(SITE = Site..MPA..REF.) %>%
filter(!is.na(Drift.Time..hrs.))
# Need to change 7's to july and 8's to august
drifts$Month[drifts$Month == 7] <- "July"
drifts$Month[drifts$Month == 8] <- "August"
# Collapse catches to drift level
#Target_catches <- subset(catches, Species.Code == ccfrp.species.code)
Drift_catches <- catches %>%
group_by(Common.Name, Drift.ID) %>%
tally()
#colnames(Target_catches)[2] <- "Target"
# join drifts and catch info and make NA 0 where target species not observed
dat <- left_join(Drift_catches, drifts)
dat <- dat %>%
mutate(Area.code = substring(Drift.ID, 1, 2)) %>%
mutate(Effort = Total...Anglers.Fishing * Drift.Time..hrs.) %>%
mutate(CPUE = n / Effort)
dat <- left_join(dat, Areas)
# List of AREAs to drop
# TD, Trinidad - no mpa
# FN, farallons, samples only 2 years
# PC - error?
dat <- dat %>%
filter(!(Area.code %in% c("FN", "PC", "BM", "LB", "TD"))) %>%
droplevels
# Fish time filter
# Give drifts within a cell on the same day a drift number
# See how many drifts and total fished time
Num_drifts_fished <- dat %>%
select(YEAR, Drift.ID, ID.Cell.per.Trip, Drift.Time..hrs.) %>%
unique() %>%
group_by(YEAR, ID.Cell.per.Trip) %>%
summarise(
num.drifts = n(),
tot_time = sum(Drift.Time..hrs.)
)
# cells fished at least 15 minutes
Drift_time_keep <- Num_drifts_fished %>% filter(tot_time >= .25)
# Remove cells fished less tan a total of 15 minutes on a day
dat <- dat %>%
filter(
ID.Cell.per.Trip %in% Drift_time_keep$ID.Cell.per.Trip,
`Drift.Time..hrs.` > 0.03333333
)
#-------------------------------------------------------------------------------
# Figure out how many of each species we can collect during the 2023 season
#Subset to just Reference areas since we can't take otoliths from MPAs
#and only look at 2019-2022
dat2 <- dat %>%
filter(SITE == 'REF',
YEAR %in% c(2019, 2021, 2022))
#Get the total angler hours by monitoring area
effort_by_program <- dat2 %>%
ungroup() %>%
select(Drift.ID, YEAR, Effort, Total...Anglers.Fishing, Monitoring.Group, Name) %>%
unique()
total_effort <- effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(tot_effort = sum(Effort)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = tot_effort)
## Get it down to the species there would be enough or or we're interested in
total.fish <- dat2 %>%
group_by(Common.Name) %>%
summarise(total = sum(n)) #%>%
# filter(total > )
dat2 <- dat2 %>%
filter(Common.Name %in% total.fish$Common.Name) %>%
filter(!(Common.Name %in% c("Yelloweye Rockfish",
"Olive or Yellowtail Rockfish")))
fish_numbers <- dat2 %>%
group_by(Common.Name, Monitoring.Group, YEAR, Region) %>%
summarise(total_fish = sum(n),
avg_annual_cpue = mean(CPUE))# %>%
# group_by(Common.Name, CA_area) %>%
# summarise(avg_fish = mean(total_fish),
#           avg_cpue = mean(avg_annual_cpue)) %>%
# mutate(avg_fish = round(avg_fish,0))
#
####SOUTH
# Get the average number of fish by program per year
south0 <- fish_numbers %>%
filter(Region == "South") %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 50 - goal or less
#number of otoliths per species
south_collections <- south0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
south_collections <- left_join(south_collections, south0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total))))) #%>%
#Check totals for each program to see how they fall out in terms of effort for collecting
south_program_effort <- south_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
#####NORTH
# Get the average number of fish collected over the last three years by program
north0 <- fish_numbers %>%
filter(Region %in% c("Central", "North")) %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 60 - goal
#number of otoliths per species
north_collections <- north0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
north_collections <- left_join(north_collections, north0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total)))))
#Check totals for each program to see how they fall out in terms of effort for collecting
north_program_effort <- north_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
program_effort = rbind(south_program_effort, north_program_effort)
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO)))
View(collections_final)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO))) %>% rename(CP Slo = Cal Poly, CP Humboldt = HSU)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO))) %>% rename("CP Slo" = "Cal Poly", "CP Humboldt = HSU")
View(collections_final)
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO)))
collections_final %>% rename("CP Slo" = "Cal Poly", "CP Humboldt = HSU")
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO))) %>% rename("CP Slo" = "Cal Poly", "CP Humboldt" = "HSU")
kableExtra::kbl(collections_final,
booktabs = TRUE,
caption = "Suggested otolith collections by species and CCFRP partner",
row.names = F) %>%
kableExtra::kable_styling(latex_options = "hold_position")
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO))) %>% rename("CP Slo" = "Cal Poly", "CP Humboldt" = "HSU", "Species" = "Common.Name")
poly = read.csv("poly_ref.csv")
head(poly)
polyblueBL = filter(polyblue, area == "BL")
polyblue = filter(poly, species == "BLU")
poly = read.csv("poly_ref.csv")
polyblue = filter(poly, species == "BLU")
head(poly)
knitr::opts_chunk$set(echo = FALSE)
library(devtools)
library(dplyr)
library(ggplot2)
library(ggridges)
library(stringr)
library(tidyr)
library(unikn)
library(viridis)
library(kableExtra)
library(knitr)
library(xtable)
poly = read.csv("poly_ref.csv")
polyblue = filter(poly, species == "BLU")
polyblue$year = as.character(polyblue$year)
polyblue$retained = as.character(polyblue$retained)
polyblueBL = filter(polyblue, area == "BL")
meangroup = polyblueBL %>% group_by(year, retained) %>%
summarise(avg = mean(length_mm))
ggplot(polyblueBL, aes(x=length_mm, fill=retained)) + geom_density(alpha=.2)+
facet_grid(year ~ .) +
geom_vline(data=meangroup, aes(xintercept=avg, colour=retained), linetype="dashed", size=.3) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tab = polyblueBL %>% group_by(year, retained) %>%
summarise(n = n()) %>% pivot_wider(names_from = retained, values_from = n)
kableExtra::kbl(tab,
longtable = TRUE,
booktabs = TRUE,
caption = "Cal Poly Slo Blue RF Piedras Blancas",
row.names = F
) %>%
kable_styling(latex_options=c("repeat_header", "striped", "hold_position"))
polygoph = filter(poly, species == "GPR")
polygoph$year = as.character(polygoph$year)
polygoph$retained = as.character(polygoph$retained)
meangroup = polygoph %>% group_by(year, retained) %>%
summarise(avg = mean(length_mm))
polygophBL = filter(polygoph, area == "BL")
ggplot(polygophBL, aes(x=length_mm, fill=retained)) + geom_density(alpha=.2)+
facet_grid(year ~ .) +
geom_vline(data=meangroup, aes(xintercept=avg, colour=retained), linetype="dashed", size=.3) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
