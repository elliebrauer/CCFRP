summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1))
booktabs = TRUE,
kableExtra::kbl(
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)),
booktabs = TRUE,
caption = "Total angler hours by partner",
row.names = F)   )
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)
effort_by_program %>%
kableExtra::kbl(
caption = "Total effort in 2021"),
kableExtra::kbl(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)),
)
kableExtra::kbl(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1))
)
kableExtra::kbl(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
)
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
)
)
effort_by_program %>%
effort_by_program %>%
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group)
View(effort_by_program)
aa = effort_by_program %>%
aa = effort_by_program %>%
aa = effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group)
library(dplyr)
aa = effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
)
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2018) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours),, accuracy = 1)) %>% data.frame
)
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2018",
effort_by_program %>%
filter(YEAR == 2018) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours),, accuracy = 1)) %>% data.frame
)
)
## Get it down to the species there would be enough or or we're interested in
total.fish <- dat2 %>%
group_by(Common.Name) %>%
summarise(total = sum(n)) #%>%
# filter(total > )
dat2 <- dat2 %>%
filter(Common.Name %in% total.fish$Common.Name) %>%
filter(!(Common.Name %in% c("Yelloweye Rockfish")))
fish_numbers <- dat2 %>%
group_by(Common.Name, Monitoring.Group, YEAR, Region) %>%
summarise(total_fish = sum(n),
avg_annual_cpue = mean(CPUE))# %>%
# group_by(Common.Name, CA_area) %>%
# summarise(avg_fish = mean(total_fish),
#           avg_cpue = mean(avg_annual_cpue)) %>%
# mutate(avg_fish = round(avg_fish,0))
#
####SOUTH
# Get the average number of fish by program per year
south0 <- fish_numbers %>%
filter(Region == "South") %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 50 - goal or less
#number of otoliths per species
south_collections <- south0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
south_collections <- left_join(south_collections, south0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total))))) #%>%
#Check totals for each program to see how they fall out in terms of effort for collecting
south_program_effort <- south_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
#####NORTH
# Get the average number of fish collected over the last three years by program
north0 <- fish_numbers %>%
filter(Region %in% c("Central", "North")) %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 60 - goal
#number of otoliths per species
north_collections <- north0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
north_collections <- left_join(north_collections, north0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total)))))
#Check totals for each program to see how they fall out in terms of effort for collecting
north_program_effort <- north_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
program_effort = rbind(south_program_effort, north_program_effort)
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO)))
View(collections_final)
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/GitHub/CCFRP")
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
load("CCFRP_cleanedup.RData")
#-------------------------------------------------------------------------------
# Figure out how many of each species we can collect during the 2022 season
#Subset to just Reference areas since we can't take otoliths from MPAs
#and only look at 2019-2021
dat2 <- dat %>%
filter(SITE == 'REF',
YEAR %in% c(2018, 2019, 2021))
#Get the total angler hours by monitoring area
effort_by_program <- dat2 %>%
ungroup() %>%
select(Drift.ID, YEAR, Effort, Total...Anglers.Fishing, Monitoring.Group, Name) %>%
unique()
total_effort <- effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(tot_effort = sum(Effort)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = tot_effort)
#Look at the effort by year among the programs
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort",
effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = tot_effort)
)
)
#Look at the effort by year among the programs
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort",
effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = Total_AnglerHours)
)
)
#Look at the effort by year among the programs
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort",
effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = Total_AnglerHours)
)
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2021",
effort_by_program %>%
filter(YEAR == 2021) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>%
data.frame
)
)
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort in 2018",
effort_by_program %>%
filter(YEAR == 2018) %>%
group_by(Monitoring.Group) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
mutate(Percent_Effort = scales::percent(Total_AnglerHours / sum(Total_AnglerHours), accuracy = 1)) %>% data.frame
)
)
## Get it down to the species there would be enough or or we're interested in
total.fish <- dat2 %>%
group_by(Common.Name) %>%
summarise(total = sum(n)) #%>%
# filter(total > )
dat2 <- dat2 %>%
filter(Common.Name %in% total.fish$Common.Name) %>%
filter(!(Common.Name %in% c("Yelloweye Rockfish")))
fish_numbers <- dat2 %>%
group_by(Common.Name, Monitoring.Group, YEAR, Region) %>%
summarise(total_fish = sum(n),
avg_annual_cpue = mean(CPUE))# %>%
# group_by(Common.Name, CA_area) %>%
# summarise(avg_fish = mean(total_fish),
#           avg_cpue = mean(avg_annual_cpue)) %>%
# mutate(avg_fish = round(avg_fish,0))
#
####SOUTH
# Get the average number of fish by program per year
south0 <- fish_numbers %>%
filter(Region == "South") %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 50 - goal or less
#number of otoliths per species
south_collections <- south0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
south_collections <- left_join(south_collections, south0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total))))) #%>%
#Check totals for each program to see how they fall out in terms of effort for collecting
south_program_effort <- south_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
#####NORTH
# Get the average number of fish collected over the last three years by program
north0 <- fish_numbers %>%
filter(Region %in% c("Central", "North")) %>%
group_by(Common.Name, Monitoring.Group) %>%
summarise(average_fish = mean(total_fish)) %>%
filter(average_fish > 4)
#Get the percent of the fish collected by each program and multiply by 60 - goal
#number of otoliths per species
north_collections <- north0 %>%
group_by(Common.Name) %>%
summarise(total = sum(average_fish))
north_collections <- left_join(north_collections, north0) %>%
mutate(num_to_collect =  if_else(total > 75, ceiling(((average_fish/total)*50)),
ceiling(((average_fish/total)*(.7*total)))))
#Check totals for each program to see how they fall out in terms of effort for collecting
north_program_effort <- north_collections %>%
group_by(Monitoring.Group) %>%
summarise(total_fish_for_otoliths = sum(num_to_collect))
program_effort = rbind(south_program_effort, north_program_effort)
###Bind the collection numbers and make a table
collections <- rbind(north_collections, south_collections)
collections_final <- collections %>%
select(Common.Name, Monitoring.Group, num_to_collect) %>%
pivot_wider(names_from = Monitoring.Group, values_from = num_to_collect, values_fill = 0) %>%
rowwise(Common.Name) %>%
mutate(Total = sum(c_across(BML:SIO)))
kableExtra::kbl(collections_final,
booktabs = TRUE,
caption = "Suggested otolith collections for 2022 CCFRP by species and partner",
row.names = F) %>%
kableExtra::kable_styling(latex_options = "striped")
View(south0)
View(Areas)
#Look at the effort by year among the programs
kableExtra::kable_classic(
full_width = FALSE,
knitr::kable(
caption = "Total effort",
effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(Total_AnglerHours = round(sum(Effort),0)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = Total_AnglerHours)
) %>%
kable_styling(latex_options = "striped")
)
styler:::style_selection()
styler:::style_selection()
View(Species)
View(Species)
View(Species)
Species$NMFS_interest = Species$Rockfish
nonrockfish = c("California Scorpionfish", "Kelp Greenling", "Lingcod")
Species <- Species %>%
mutate(NMFS_interest = if(Common.Name %in% nonrockfish) ~ TRUE)
Species <- Species %>%
mutate(NMFS_interest = if(Common.Name %in% nonrockfish), TRUE)
Species <- Species %>%
mutate(NMFS_interest = replace(NMFS_interest, Common.Name %in% nonrockfish), TRUE)
Species <- Species %>%
Species <- Species %>%
mutate(NMFS_interest = replace(NMFS_interest, Common.Name %in% nonrockfish, TRUE))
Species$NMFS_interest = Species$Rockfish
nonrockfish = c("California Scorpionfish", "Kelp Greenling", "Lingcod")
Species <- Species %>%
mutate(NMFS_interest = replace(NMFS_interest, Common.Name %in% nonrockfish, TRUE))
source("C:/GitHub/CCFRP/00-CCFRP_data_cleanup.R", echo=TRUE)
source("C:/GitHub/CCFRP/00-CCFRP_data_cleanup.R", echo=TRUE)
source("C:/GitHub/CCFRP/00-CCFRP_data_cleanup.R", echo=TRUE)
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
load("CCFRP_cleanedup.RData")
summary(dat$Common.Name)
summary(as.factor(dat$Common.Name))
View(dat)
################################################################################
### Script to clean up the CCFRP data and get it in
### A form to use for exploratory analysis
### Melissa Monk
### Feb 2022
################################################################################
rm(list = ls(all = TRUE))
graphics.off()
library(dplyr)
library(tidyr)
setwd("C:/GitHub/CCFRP")
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
# Eventually open these directly in access, but it's not behaving
# Extract excel files from the Access database
# read in trip data
trips <- read.csv("1-Trip Information.csv", fileEncoding="UTF-8-BOM")
# read in drift data
drifts_all <-read.csv("3-Drift Information.csv", fileEncoding="UTF-8-BOM")
# read in catch data
catches <- read.csv("4-Caught Fishes.csv", fileEncoding="UTF-8-BOM")
#Species lookup
Species <- read.csv("Fish Species.csv", fileEncoding="UTF-8-BOM")
Species$NMFS_interest = Species$Rockfish
nonrockfish = c("California Scorpionfish", "Kelp Greenling", "Lingcod")
Species <- Species %>%
mutate(NMFS_interest = replace(NMFS_interest, Common.Name %in% nonrockfish, TRUE))
Species <- Species %>%
select(Species.Code, Common.Name, Rockfish, NMFS_interest) %>%
filter(NMFS_interest==TRUE)
#Read in management groups
Areas <- read.csv("Monitoring Areas.csv", fileEncoding="UTF-8-BOM")
# read in the two GIS depth spreadsheets from Becky
GIS.start.depth <- readxl::read_xlsx("CCFRP_Start_GIS_Depths.xlsx")
GIS.end.depth <- readxl::read_xlsx("CCFRP_End_GIS_Depths.xlsx")
# columns have spaces - remove all spaces here
trips <- trips %>% rename_all(make.names)
catches <- catches %>% rename_all(make.names)
drifts_all <- drifts_all %>% rename_all(make.names)
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code')
View(catches)
summary(as.factor(catches$Common.Name))
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
filter(!is.na(Common.Name))
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
catches <- catches %>%
filter(!is.na(Common.Name))
# columns have spaces - remove all spaces here
trips <- trips %>% rename_all(make.names)
catches <- catches %>% rename_all(make.names)
drifts_all <- drifts_all %>% rename_all(make.names)
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
catches <- catches %>%
filter(!is.na(Common.Name))
################################################################################
### Script to clean up the CCFRP data and get it in
### A form to use for exploratory analysis
### Melissa Monk
### Feb 2022
################################################################################
rm(list = ls(all = TRUE))
graphics.off()
library(dplyr)
library(tidyr)
setwd("C:/GitHub/CCFRP")
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
# Eventually open these directly in access, but it's not behaving
# Extract excel files from the Access database
# read in trip data
trips <- read.csv("1-Trip Information.csv", fileEncoding="UTF-8-BOM")
# read in drift data
drifts_all <-read.csv("3-Drift Information.csv", fileEncoding="UTF-8-BOM")
# read in catch data
catches <- read.csv("4-Caught Fishes.csv", fileEncoding="UTF-8-BOM")
#Species lookup
Species <- read.csv("Fish Species.csv", fileEncoding="UTF-8-BOM")
Species$NMFS_interest = Species$Rockfish
nonrockfish = c("California Scorpionfish", "Kelp Greenling", "Lingcod")
Species <- Species %>%
mutate(NMFS_interest = replace(NMFS_interest, Common.Name %in% nonrockfish, TRUE))
Species <- Species %>%
select(Species.Code, Common.Name, Rockfish, NMFS_interest) %>%
filter(NMFS_interest==TRUE)
#Read in management groups
Areas <- read.csv("Monitoring Areas.csv", fileEncoding="UTF-8-BOM")
# read in the two GIS depth spreadsheets from Becky
GIS.start.depth <- readxl::read_xlsx("CCFRP_Start_GIS_Depths.xlsx")
GIS.end.depth <- readxl::read_xlsx("CCFRP_End_GIS_Depths.xlsx")
# columns have spaces - remove all spaces here
trips <- trips %>% rename_all(make.names)
catches <- catches %>% rename_all(make.names)
drifts_all <- drifts_all %>% rename_all(make.names)
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code') %>%
catches <- catches %>%
filter(!is.na(Common.Name))
#Add species common names
catches <- left_join(catches, Species, by = 'Species.Code')
catches <- catches %>%
filter(!is.na(Common.Name))
summary(as.factor(catches.CommonName))
summary(as.factor(catches$Common.Name))
source("C:/GitHub/CCFRP/00-CCFRP_data_cleanup.R", echo=TRUE)
View(Num_drifts_fished)
View(drifts_all)
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/GitHub/CCFRP")
#-------------------------------------------------------------------------------
# Read in data and basic cleanup
load("CCFRP_cleanedup.RData")
#-------------------------------------------------------------------------------
# Figure out how many of each species we can collect during the 2022 season
#Subset to just Reference areas since we can't take otoliths from MPAs
#and only look at 2019-2021
dat2 <- dat %>%
filter(SITE == 'REF',
YEAR %in% c(2018, 2019, 2021))
#Get the total angler hours by monitoring area
effort_by_program <- dat2 %>%
ungroup() %>%
select(Drift.ID, YEAR, Effort, Total...Anglers.Fishing, Monitoring.Group, Name) %>%
unique()
total_effort <- effort_by_program %>%
select(Monitoring.Group, YEAR, Effort) %>%
group_by(Monitoring.Group, YEAR) %>%
summarise(tot_effort = sum(Effort)) %>%
pivot_wider(names_from = Monitoring.Group, values_from = tot_effort)
fish_numbers <- dat2 %>%
group_by(Common.Name, Monitoring.Group, YEAR, Region) %>%
summarise(total_fish = sum(n),
avg_annual_cpue = mean(CPUE))# %>%
View(fish_numbers)
